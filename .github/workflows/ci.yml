name: CI

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+*'
  pull_request:
    branches:
      - main
    types:
      - opened
      - reopened
      - synchronize
    paths-ignore:
      - '**.md'

env:
  DOCKER_PLATFORMS: "linux/arm64,linux/amd64,linux/ppc64le,linux/s390x,linux/386"

jobs:

  binary:
    name: Build Binary
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      - name: Setup Golang Environment
        uses: actions/setup-go@v3
        with:
          go-version-file: go.mod
          cache: true
      - name: Build Binary
        run: make nginx-ns1-gslb

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      - name: Setup Golang Environment
        uses: actions/setup-go@v3
        with:
          go-version-file: go.mod
          cache: true
      - name: Run Tests
        run: make test

  build:
    name: Build Image
    runs-on: ubuntu-20.04
    needs: [binary, unit-tests]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup Golang Environment
        uses: actions/setup-go@v3
        with:
          go-version-file: go.mod
          cache: true
      - name: Determine GOPATH
        id: go
        run: echo "::set-output name=go_path::$(go env GOPATH)"

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: arm64,ppc64le,s390x,386
        if: github.event_name != 'pull_request'

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
        if: github.event_name != 'pull_request'

      - name: Publish Release Notes
        uses: release-drafter/release-drafter@v5
        with:
            publish: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: ${{ startsWith(github.ref, 'refs/tags/') }}

      - name: Download Syft
        uses: anchore/sbom-action/download-syft@v0.12.0

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v3
        with:
          version: latest
          args: ${{ !startsWith(github.ref, 'refs/tags/') && 'build --snapshot' || 'release' }} ${{ github.event_name == 'pull_request' && '--single-target' || '' }} --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GOPATH: ${{ steps.go.outputs.go_path }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ghcr.io/nginxinc/nginx-ns1-gslb
          tags: |
            type=edge
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
          labels: |
            org.opencontainers.image.vendor=NGINX Inc <integrations@nginx.com>

      - name: Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Image
        uses: docker/build-push-action@v3
        with:
          file: build/Dockerfile
          context: '.'
          target: goreleaser
          platforms: ${{ github.event_name != 'pull_request' && env.DOCKER_PLATFORMS || '' }}
          load: ${{ github.event_name == 'pull_request' }}
          push: ${{ github.event_name != 'pull_request' }}
          pull: true
          no-cache: ${{ github.event_name != 'pull_request' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
